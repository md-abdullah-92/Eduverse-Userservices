# Multi-stage build for Spring Boot application

# Stage 1: Build the application
FROM maven:3.9.4-openjdk-17-slim AS build

WORKDIR /app

# Copy pom.xml and download dependencies (for better caching)
COPY pom.xml .
RUN mvn dependency:go-offline -B

# Copy source code and build the application
COPY src ./src
RUN mvn clean package -DskipTests

# Stage 2: Runtime image
FROM openjdk:17-jdk-slim

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the built JAR from the build stage
COPY --from=build /app/target/user-services-1.0.0.jar app.jar

# Create a non-root user for security
RUN addgroup --system spring && adduser --system spring --ingroup spring
USER spring:spring

# Expose the port
EXPOSE ${PORT:-5000}

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=60s --retries=3 
  CMD curl -f http://localhost:${PORT:-5000}/api/health || exit 1

# Run the application
ENTRYPOINT ["java", "-jar", "app.jar"]
